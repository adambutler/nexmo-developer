openapi: 3.0.0
servers:
  - url: 'https://rest.nexmo.com'
info:
  title: SMS API
  version: v1.0.0
  description:
    With the Nexmo SMS API you can send SMS from your account and lookup messages both messages that you've sent as well as messages sent to your virtual numbers.
paths:
  '/sms/{format}':
    post:
      x-group: sms
      summary: Send an SMS
      description: Send an outbound SMS from your Nexmo account
      parameters:
        - name: format
          description: The format of the response
          required: true
          in: path
          example: json
          type: string
          enum:
            - json
            - xml
          default: json
        - name: api_key
          description: Your API key
          required: true
          in: query
          example: abcd1234
          schema:
            type: string
            minLength: 8
            maxLength: 8
        - name: api_secret
          description: Your API secret
          required: true
          in: query
          example: abcdef1234567890
          schema:
            type: string
            minLength: 16
            maxLength: 16
      responses:
        '200':
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SMS'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                from:
                  description: The name or number the message should be sent from. Alphanumeric senderID's are not supported in all countries, see [Global Messaging](/messaging/sms/guides/global-messaging#country-specific-features) for more details.
                  type: string
                  example: 'Acme Inc'
                  required: true
                to:
                  description: The number that the message should be sent to
                  type: string
                  minLength: 11
                  maxLength: 12
                  pattern: '\d{11,12}'
                  example: 447700900000
                  required: true
                text:
                  description: The body of the message being sent
                  type: string
                  example: Hello World!
                ttl:
                  description: '**Advanced**: The duration in milliseconds the delivery of an SMS will be attempted.§§ By default Nexmo attempt delivery for 72 hours, however the maximum effective value depends on the operator and is typically 24 - 48 hours. We recommend this value should be kept at its default or at least 30 minutes.'
                  type: integer
                  example: 900000
                  default: 259200000
                  minimum: 20000
                  maximum: 604800000
                status-report-req:
                  description: '**Advanced**: Boolean indicating if you like to receive a [Delivery Receipt](/messaging/sms/building-blocks/receive-a-delivery-receipt).'
                  type: boolean
                  example: 'false'
                  default: 'true'
                callback:
                  description: '**Advanced**: The webhook endpoint the delivery receipt for this sms is sent to. This parameter overrides the webhook endpoint you set in Dashboard.'
                  type: string
                  example: 'https://example.com/sms-dlr'
                message-class:
                  description: '**Advanced**: The Data Coding Scheme value of the message'
                  type: integer
                  enum:
                    - 0
                    - 1
                    - 2
                    - 3
                type:
                  description: '**Advanced**: The format of the message body'
                  type: string
                  enum:
                    - text
                    - binary
                    - wappush
                    - unicode
                    - vcal
                    - vard
                  example: text
                  default: text
                vcard:
                  description: '**Advanced**: A business card in [vCard format](https://en.wikipedia.org/wiki/VCard). Depends on `type` parameter having the value `vcard`.'
                  type: vcard
                vcal:
                  description: '**Advanced**: A calendar event in [vCal format](https://en.wikipedia.org/wiki/VCal). Depends on `type` parameter having the value `vcal`.'
                  type: vcal
                body:
                  description: '**Advanced**: Hex encoded binary data. Depends on `type` parameter having the value `binary`.'
                  type: string
                  example: 0011223344556677
                udh:
                  description: '**Advanced**: Your custom Hex encoded [User Data Header](https://en.wikipedia.org/wiki/User_Data_Header). Depends on `type` parameter having the value `binary`.'
                  type: string
                  example: 06050415811581
                protocol-id:
                  description: '**Advanced**: The value of the [protocol identifier](https://en.wikipedia.org/wiki/GSM_03.40#Protocol_Identifier) to use. Ensure that the value is aligned with `udh`.'
                  type: integer
                  example: 127
                title:
                  description: '**Advanced**: The title for a wappush SMS. Depends on `type` parameter having the value `wappush`.'
                  type: string
                  example: Welcome
                url:
                  description: '**Advanced**: The URL of your website. Depends on `type` parameter having the value `wappush`.'
                  type: string
                  example: https://example.com
                validity:
                  description: '**Advanced**: The availability for an SMS in milliseconds. Depends on `type` parameter having the value `wappush`.'
                  type: string
                  example: https://example.com

components:
  schemas:
    SMS:
      type: object
      properties:
        message-count:
          type: integer
          description: The amount of messages that were sent
          example: 1
        messages:
          $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        to:
          type: string
          description: The number the message was sent to
          example: '447700900000'
        message-id:
          type: string
          description: The ID of the message
          example: 0A0000000123ABCD1
        status:
          type: string
          description: The status of the message
          example: '0'
        remaining-balance:
          type: string
          description: Your remaining balance
          example: '3.14159265'
        message-price:
          type: string
          description: The cost of the message
          example: '0.03330000'
        network:
          type: string
          description: The ID of the network of the recipient
          example: '12345'
x-groups:
  sms:
    name: "SMS"
    order: 1
    description: The SMS object contains information about the request and details of the message information.
    schema:
      $ref: '#/components/schemas/SMS'
